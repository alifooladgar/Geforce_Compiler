keyword :: int
identifier :: ali
punctuation :: (
punctuation :: )
punctuation :: {
keyword :: int
identifier :: a
operator :: =
number :: 5
punctuation :: ;
identifier :: a
operator :: =
identifier :: a
operator :: +
number :: 1
punctuation :: ;
punctuation :: }
keyword :: while
punctuation :: (
number :: 1
punctuation :: )
punctuation :: {
keyword :: int
identifier :: c
operator :: =
number :: 5
punctuation :: ;
punctuation :: }
keyword :: else
punctuation :: {
punctuation :: }
keyword :: int
identifier :: main
punctuation :: (
punctuation :: )
punctuation :: {
keyword :: int
identifier :: arr[6]
punctuation :: ;
keyword :: int
identifier :: sum
operator :: =
number :: 0
punctuation :: ;
keyword :: int
identifier :: sumo
operator :: =
number :: 0
punctuation :: ;
keyword :: int
identifier :: sumt
operator :: =
number :: 0
punctuation :: ;
keyword :: int
identifier :: mul
operator :: =
number :: 0
punctuation :: ;
identifier :: arr[0]
operator :: =
number :: 0x12
punctuation :: ;
identifier :: arr[1]
operator :: =
number :: 0x03
punctuation :: ;
identifier :: mul
operator :: =
identifier :: arr[0]
operator :: *
identifier :: arr[1]
punctuation :: ;
identifier :: sumo
operator :: =
identifier :: mul
operator :: +
identifier :: sum
punctuation :: ;
identifier :: sum
operator :: =
identifier :: sumo
operator :: +
identifier :: sumt
punctuation :: ;
identifier :: arr[2]
operator :: =
number :: 0x11
punctuation :: ;
identifier :: arr[3]
operator :: =
number :: 0x04
punctuation :: ;
identifier :: mul
operator :: =
identifier :: arr[2]
operator :: *
identifier :: arr[3]
punctuation :: ;
identifier :: sumo
operator :: =
identifier :: mul
operator :: +
identifier :: sum
punctuation :: ;
identifier :: sum
operator :: =
identifier :: sumo
operator :: +
identifier :: sumt
punctuation :: ;
identifier :: mul
operator :: =
identifier :: arr[4]
operator :: *
identifier :: arr[5]
punctuation :: ;
identifier :: sumo
operator :: =
identifier :: mul
operator :: +
identifier :: sum
punctuation :: ;
identifier :: sum
operator :: =
identifier :: sumo
operator :: +
identifier :: sumt
punctuation :: ;
keyword :: int
identifier :: number
operator :: =
number :: 3
punctuation :: ;
keyword :: int
identifier :: total
operator :: =
identifier :: number
operator :: /
identifier :: sum
punctuation :: ;
keyword :: int
identifier :: end
operator :: =
number :: 1
punctuation :: ;
keyword :: if
punctuation :: (
identifier :: end
punctuation :: )
keyword :: return
number :: 0
punctuation :: ;
punctuation :: }
